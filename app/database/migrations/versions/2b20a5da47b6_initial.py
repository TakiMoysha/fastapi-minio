"""initial

Revision ID: 2b20a5da47b6
Revises: 
Create Date: 2025-05-07 20:08:09.322773+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import advanced_alchemy


# revision identifiers, used by Alembic.
revision: str = '2b20a5da47b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file',
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_type', sa.Enum('DICOM', 'JPG', 'PNG', 'PDF', name='supportedfileformats'), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('hash_sum', sa.String(), nullable=False),
    sa.Column('upload_date', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_file')),
    comment='Represent a file uploaded by a user to minio.'
    )
    op.create_table('role',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name')),
    comment='User roles for application access'
    )
    op.create_table('user_account_role',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('role_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('assigned_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_account_role_role_id_role'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], name=op.f('fk_user_account_role_user_id_user_account'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_account_role')),
    comment='Links a user to a specific role.'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_account_role')
    op.drop_table('role')
    op.drop_table('file')
    # ### end Alembic commands ###
